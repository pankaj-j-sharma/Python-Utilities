Explain what is REST and RESTFUL?

REST represents REpresentational State Transfer; it is a relatively new aspect of writing web API.
RESTFUL is referred for web services written by applying REST architectural concept are called RESTful services, 
it focuses on system resources and how state of resource should be transported over HTTP protocol to different clients. 
In RESTFUL web service HTTP methods like GET, POST, PUT and DELETE can be used to perform CRUD operations.
------------------------------------------------------------------------------------------------------------------------

Explain the architectural style for creating web API?

The architectural style for creating web api are
HTTP for client server communication
XML/JSON as formatting language
Simple URI as the address for the services
Stateless communication
------------------------------------------------------------------------------------------------------------------------

Mention what are the HTTP methods supported by REST?

HTTP methods supported by REST are:
GET: It requests a resource at the request URL. It should not contain a request body as it will be discarded. 
Maybe it can be cached locally or on the server.This is used for fetching details from the server and is basically a read-only operation.
POST: This method is used for the creation of new resources on the server.It submits information to the service for processing; 
it should typically return the modified or new resource
PUT: This method is used to update the old/existing resource on the server or to replace the resource.
At the request URL it update the resource
DELETE: At the request URL it removes the resource.
PATCH: This is used for modifying the resource on the server.
OPTIONS: It indicates which techniques are supported
HEAD: About the request URL it returns meta information
------------------------------------------------------------------------------------------------------------------------

Mention whether you can use GET request instead of PUT to create a resource?

No, you are not supposed to use PUT for GET. GET operations should only have view rights, 
while PUT resource is used for updating a data
------------------------------------------------------------------------------------------------------------------------

Mention some key characteristics of REST?

Some key characteristics of REST includes
REST is stateless, therefore the SERVER has no state (or session data)
With a well-applied REST API, the server could be restarted between two calls as every data is passed to the server
Web service mostly uses POST method to make operations, whereas REST uses GET to access resources.
The service is based on the Client-Server model.
The service uses HTTP Protocol for fetching data/resources, query execution, or any other functions.
The medium of communication between the client and server is called “Messaging”.
Resources are accessible to the service by means of URIs.
It follows the statelessness concept where the client request and response are not dependent on others and thereby provides total assurance of getting the required data.
These services also use the concept of caching to minimize the server calls for the same type of repeated requests.
These services can also use SOAP services as implementation protocol to REST architectural pattern
------------------------------------------------------------------------------------------------------------------------

Mention what is the difference between PUT and POST?

“PUT” puts a file or resource at a particular URI and exactly at that URI. If there is already a file or resource at that URI, 
PUT changes that file or resource. If there is no resource or file there, PUT makes one
POST sends data to a particular URI and expects the resource at that URI to deal with the request. 
The web server at this point can decide what to do with the data in the context of specified resource
PUT is idempotent meaning, invoking it any number of times will not have an impact on resources.
However, POST is not idempotent, meaning if you invoke POST multiple times it keeps creating more resources
------------------------------------------------------------------------------------------------------------------------

What is the concept of statelessness in REST?

The REST architecture is designed in such a way that the client state is not maintained on the server. This is known as statelessness. 
The context is provided by the client to the server using which the server processes the client’s request. 
The session on the server is identified by the session identifier sent by the client.
------------------------------------------------------------------------------------------------------------------------

While creating URI for web services, what are the best practices that needs to be followed?

While defining resources, use plural nouns. Example: To identify user resource, use the name “users” for that resource.
While using the long name for resources, use underscore or hyphen. Avoid using spaces between words. For example, 
to define authorized users resource, the name can be “authorized_users” or “authorized-users”.
The URI is case-insensitive, but as part of best practice, it is recommended to use lower case only.
While developing URI, the backward compatibility must be maintained once it gets published. When the URI is updated, 
the older URI must be redirected to the new one using the HTTP status code 300.
Use appropriate HTTP methods like GET, PUT, DELETE, PATCH, etc. It is not needed or recommended to use these method names in the URI. 
Example: To get user details of a particular ID, use /users/{id} instead of /getUser
Use the technique of forward slashing to indicate the hierarchy between the resources and the collections. 
Example: To get the address of the user of a particular id, we can use: /users/{id}/address.
While retrieving huge resource data, it is advisable to include filtering and pagination of the resources. 
This is because returning huge data all at once can slow down the system and reduce the application performance.
incorporating SSL/TLS becomes the most important step while developing APIs as they facilitate establishing secure communication. 
SSL certificates are easier to get and load on the server.
Since REST supports the feature of caching, we can use this feature to cache the data in order to improve the application performance.
Versioning needs to be done in case we are planning to make any changes with the existing endpoints. e.g. define /v1,/v2
------------------------------------------------------------------------------------------------------------------------

What are Idempotent methods? How is it relevant in RESTful web services domain?

Idempotent methods ensure that the responses to a request if called once or ten times or more than that remain the same.
REST provides idempotent methods automatically. GET, PUT, DELETE, HEAD, OPTIONS, and TRACE are the idempotent HTTP methods. 
POST is not idempotent.
------------------------------------------------------------------------------------------------------------------------

How can you share global variables across modules?

Ans: To share global variables across modules within a single program, create a special module. Import the config module in all modules of your application. The module will be available as a global variable across modules.
------------------------------------------------------------------------------------------------------------------------
